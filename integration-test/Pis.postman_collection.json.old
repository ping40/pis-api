{
	"info": {
		"_postman_id": "write0574ad8a-a525-43ae-8e1e-5fd9756037f4",
		"name": "Conduit",
		"description": "Collection for testing the PISt API\n\nhttps://github.com/ping40/pis-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"console.log(' response.code: ' +  responseCode.code );",
									"tests['Response contains \"user\" property'] = responseJSON.hasOwnProperty('user');",
									"",
									"var user = responseJSON.user || {};",
									"",
									"tests['User has \"name\" property'] = user.hasOwnProperty('name');",
									"tests['User has \"token\" property'] = user.hasOwnProperty('token');",
									"",
								    "if(tests['User has \"token\" property']){",
									"    pm.globals.set('token', user.token);",
									"}",
									""
									]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"user\":{\"name\":\"{{USERNAME}}\", \"password\":\"{{PASSWORD}}\"}}"
						},
						"url": {
							"host": [
								"{{APIURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},				
				{
					"name": "Login with wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var is401Response = responseCode.code === 401;",
									"",
									"tests['Response code is 401 OK'] = is401Response;",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"user\":{\"name\":\"{{USERNAME}}\", \"password\":\"okk{{PASSWORD}}\"}}"
						},
						"url": {
							"host": [
								"{{APIURL}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				}
				
							]
		},
		{
			"name": "knowledgepoints",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON = JSON.parse(responseBody);",
									"tests['Response contains \"id\" property'] = responseJSON.hasOwnProperty('id');",
									"tests['Response contains \"userId\" property'] = responseJSON.hasOwnProperty('userId');",
									"tests['Response contains \"content\" property'] = responseJSON.hasOwnProperty('content');",
									"tests['Response contains \"createDate\" property'] = responseJSON.hasOwnProperty('createDate');",
									"tests['Response contains \"allDone\" property'] = responseJSON.hasOwnProperty('allDone');",
									"tests['Response contains \"id\" property'] = responseJSON.hasOwnProperty('id');",
							    	"tests['createDate is number'] = /^\\d{8,8}$/.test(responseJSON.createDate);",
									"tests['allDone is false'] = responseJSON.allDone === false;",
									"tests['content is fixed string'] = responseJSON.content === \"from postman test\";",							
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"content\":\"from postman test\"}"
						},
						"url": {
							"host": [
								"{{APIURL}}"
							],
							"path": [
								"knowledgepoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "create with empty content",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var is500Response = responseCode.code === 500;",
									"",
									"tests['Response code is 500 OK'] = is500Response;",															
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							},
							{
								"key": "Authorization",
								"value": "Token {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"host": [
								"{{APIURL}}"
							],
							"path": [
								"knowledgepoints"
							]
						}
					},
					"response": []
				},
				{
					"name": "create with no login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var is400Response = responseCode.code === 401;",
									"",
									"tests['Response code is 401 OK'] = is401Response;",															
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"content\":\"from postman test\"}"
						},
						"url": {
							"host": [
								"{{APIURL}}"
							],
							"path": [
								"knowledgepoints"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
